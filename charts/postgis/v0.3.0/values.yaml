# -- (object/container-image) Image map
# @notationType -- yaml
image:
  # -- Image registry
  registry: docker.io
  # -- Image repository
  repository: kartoza/postgis
  # -- Image tag
  tag: "13-3.1"
  # -- (k8s/containers/image/imagePullPolicy) Image pullPolicy
  pullPolicy: IfNotPresent

# -- (string) postgres super user
postgresqlUsername: docker

# -- (object/common.secret) Secret structure for postgres super user password
# Use this for prefilled password
# @notationType -- yaml
postgresqlPassword:
  # -- (string) Specify this password value. If not, it will be
  # autogenerated everytime chart upgraded
  value:
  valueFrom:
    secretKeyRef:
      name:
      key: postgresql-password

# -- (string) default generated database name
# if the image support it, pass a comma-separated list of database name, and
# it will be exposed in environment variable POSTGRES_DBNAME.
# The first database will be used to check connection in the probe.
postgresqlDatabase: gis

# -- (tpl/string) Use this if you have predefined secrets object
# @notationType -- tpl
existingSecret: |

# -- (tpl/list) Define this for extra pod environment variables
# @notationType -- tpl
extraPodEnv: |
  #- name: KEY_1
  #  value: "VALUE_1"
  #- name: KEY_2
  #  value: "VALUE_2"
  - name: PASSWORD_AUTHENTICATION
    value: "md5"

# -- (tpl/map) This will be evaluated as pod spec
# @notationType -- tpl
extraPodSpec: |
  ##You can set pod attribute if needed
  #ports:
  #  - containerPort: 5432
  #    name: tcp-port

# -- (tpl/map) Define this for extra secrets to be included
# @notationType -- tpl
extraSecret: |
  #key_1: value_1

# -- (tpl/map) Define this for extra config map
# @notationType -- tpl
extraConfigMap: |
  #file_1: "conf content"

# -- (tpl/list) Define this for extra volume mounts in the pod
# @notationType -- tpl
extraVolumeMounts: |
  ##You may potentially mount a config map/secret
  #- name: custom-config
  #  mountPath: /docker-entrypoint.sh
  #  subPath: docker-entrypoint.sh
  #  readOnly: true

# -- (tpl/list) Define this for extra volume (in pair with extraVolumeMounts)
# @notationType -- tpl
extraVolume: |
  ##You may potentially mount a config map/secret
  #- name: custom-config
  #  configMap:
  #    name: geoserver-config

# -- (path) PostgreSQL data dir. Location where you want to store the stateful
# data
postgresqlDataDir: /opt/kartoza/postgis/data

# -- (k8s/containers/securityContext) Define this if you want more control
# with the security context of the pods
# @notationType -- tpl
securityContext: |
  ##You have to use fsGroup if you use custom certificate
  #fsGroup: 101  # postgres group
  #runAsUser: 1000  # run as root
  #runAsGroup: 1000  # run as root

tls:
  # -- (bool) Enable to true if you can specify where the certificate is located.
  # You must also enable securityContext.fsGroup if you want to use tls
  enabled: false
  # -- (string) Secret of a Certificate kind that stores the certificate
  secretName:
  # -- (string) Subpath of the secret CA
  ca_file: ca.crt
  # -- (string) Subpath of the secret Cert file
  cert_file: tls.crt
  # -- (string) Subpath of the secret TLS key
  key_file: tls.key

# -- (k8s/containers/probe) Probe can be overridden
# If set empty, it will use default probe
# @notationType -- tpl
probe: |

# PostgreSQL service configuration
service:
  # -- (k8s/service/type) PostgresSQL service type
  type: ClusterIP
  # -- (k8s/service/clusterIP) Set to None for Headless Service
  # Otherwise set to "" to give a default cluster IP
  clusterIP: None
  # -- (k8s/service/port) Default TCP port
  port: 5432

  # -- (k8s/service/nodePort) Specify the nodePort value for the LoadBalancer and NodePort service types.
  # [ref](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport)
  nodePort:

  # -- (tpl/map) Provide any additional annotations which may be required.
  # Evaluated as a template.
  # @notationType -- tpl
  labels: |

  # -- (tpl/map) Provide any additional annotations which may be required.
  # Evaluated as a template.
  # @notationType -- tpl
  annotations: |

  # -- (k8s/service/loadBalancerIP) Set the LoadBalancer service type to internal only.
  # [ref](https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer)
  loadBalancerIP:


global:
  # -- (string) Storage class name used to provision PV
  storageClass: null

persistence:
  # -- (bool) Enable persistence. If set to false, the data directory
  # will use ephemeral volume
  enabled: true
  # -- (string) Storage class name used to provision PV
  storageClass: null
  # -- (string) A manually managed Persistent Volume and Claim
  # If defined, PVC must be created manually before volume will be bound
  # The value is evaluated as a template,
  # so, for example, the name can depend on .Release or .Chart
  # @notationType -- tpl
  existingClaim: |

  # -- (path) The path the volume will be mounted at, useful when using different
  # PostgreSQL images.
  mountPath: /opt/kartoza/postgis/data

  # -- (string) The subdirectory of the volume to mount to, useful in
  # dev environments and one PV for multiple services. Default provisioner
  # usually have .lost+found directory, so you might want to use this so
  # the container can have empty volume
  subPath: "data"

  # -- (string/size) Size of the PV
  size: 8Gi

  # -- (list) Default Access Modes
  accessModes:
    - ReadWriteOnce
  # -- (map) You can specify extra annotations here
  annotations: {}


test:
  postgis:
    # -- (tpl/array) List of containers override for testing
    # @notationType -- (tpl)
    containers:
