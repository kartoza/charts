apiVersion: apps/v1
kind: Deployment
metadata:
  name: geonode
  labels:
    app: geonode
    chart: {{ template "geonode.fullname" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
  {{- with .Values.labels }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ printf "%s-%s" .Release.Name .Chart.Name }}
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: geonode
      release: {{ .Release.Name | quote }}
  template:
    metadata:
      name: {{ template "geonode.fullname" . }}
      labels:
        app: geonode
        chart: {{ template "geonode.chart" . }}
        release: {{ .Release.Name | quote }}
        heritage: {{ .Release.Service | quote }}
      {{- with .Values.podLabels }}
      {{- toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.podAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      containers:
        - name: {{ template "geonode.fullname" . }}-uwsgi
          image: {{ template "geonode.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          command: ["/spcgeonode/scripts/spcgeonode/django/docker-entrypoint.sh"]
          args: ["uwsgi","--chdir=/spcgeonode","--module=geonode.wsgi","--socket=:8000","--http=127.0.0.1:8080","--processes=5","--buffer-size=8192"]
          env:
            - name: HTTP_HOST
              value: {{ .Values.global.geonodeSiteName | quote }}
            - name: HTTP_PORT
              value: "80"
            - name: HTTPS_HOST
              value: {{ .Values.global.geonodeSiteName | quote }}
            - name: HTTPS_PORT
              value: "443"
            - name: ADMIN_USERNAME
              value: {{ .Values.global.adminUser | quote }}
            - name: ADMIN_PASSWORD
              {{- $param := dict "Value" .Values.global.adminPassword "Context" . -}}
              {{ include "geonode.secretFrom" $param | nindent 14 }}
            - name: ADMIN_EMAIL
              value: {{ .Values.global.adminEmail | quote }}
            - name: GEOSERVER_ADMIN_USER
              value: {{ .Values.global.geoserverAdminUser | quote }}
            - name: GEOSERVER_ADMIN_PASSWORD
              {{- $param := dict "Value" .Values.global.geoserverAdminPassword "Context" . -}}
              {{ include "geonode.secretFrom" $param | nindent 14 }}
            - name: REGISTRATION_OPEN
              value: "True"
            - name: ALLOWED_HOSTS
              value: {{ template "geonode.allowedHosts" . }}
            - name: SECRET_KEY
              {{- $param := dict "Value" .Values.global.djangoSecretKey "Context" . -}}
              {{ include "geonode.secretFrom" $param | nindent 14 }}
            - name: DEFAULT_BACKEND_UPLOADER
              value: "geonode.importer"
            - name: DEFAULT_BACKEND_DATASTORE
              value: "datastore"
            - name: POSTGRES_USER
              value: {{ .Values.global.databaseUsername  | quote }}
            - name: POSTGRES_PASSWORD
              {{- $param := dict "Value" .Values.global.databasePassword "Context" . -}}
              {{ include "geonode.secretFrom" $param | nindent 14 }}
            - name: GEONODE_DATABASE_USER
              value: {{ .Values.global.databaseUsername  | quote}}
            - name: GEONODE_DATABASE
              value: {{ .Values.global.databaseName | quote }}
            - name: GEONODE_DATABASE_HOST
              value: {{ include "geonode.databaseHost" . | quote }}
            - name: GEONODE_DATABASE_PORT
              value: {{ .Values.global.databasePort | quote }}
            - name: GEONODE_DATABASE_PASSWORD
              {{- $param := dict "Value" .Values.global.databasePassword "Context" . -}}
              {{ include "geonode.secretFrom" $param | nindent 14 }}
            - name: GEONODE_GEODATABASE_USER
              value: {{ .Values.global.geodatabaseUsername  | quote}}
            - name: GEONODE_GEODATABASE
              value: {{ .Values.global.geodatabaseName | quote }}
            - name: GEONODE_GEODATABASE_HOST
              value: {{ include "geonode.geodatabaseHost" . | quote }}
            - name: GEONODE_GEODATABASE_PORT
              value: {{ .Values.global.databasePort | quote }}
            - name: GEONODE_GEODATABASE_PASSWORD
              {{- $param := dict "Value" .Values.global.geodatabasePassword "Context" . -}}
              {{ include "geonode.secretFrom" $param | nindent 14 }}
            - name: DEBUG
              value: {{ .Values.global.debug | quote }}
            - name: DJANGO_SETTINGS_MODULE
              value: {{ .Values.global.djangoSettingsModule | quote }}
            - name: STATIC_ROOT
              value: {{ .Values.global.staticRoot | quote }}
            - name: MEDIA_ROOT
              value: {{ .Values.global.mediaRoot | quote }}
            - name: STATIC_URL
              value: "/static/"
            - name: MEDIA_URL
              value: "/uploaded/"
            - name: GEOSERVER_LOCATION
              value: {{ include "geonode.geoserverURL" . | quote }}
            - name: SITE_HOST_NAME
              value: {{ .Values.global.geonodeSiteName | quote }}
            - name: C_FORCE_ROOT
              value: "True"
            - name: MONITORING_ENABLED
              value: "False"
          ports:
            - name: uwsgi-geonode
              containerPort: 8000
            - name: http-geonode
              containerPort: 8080
          volumeMounts:
            - name: config-volume
              mountPath: /spcgeonode/geonode/local_settings.py
              subPath: local_settings.py
            - name: config-volume
              mountPath: /spcgeonode/scripts/spcgeonode/django/initialize.py
              subPath: initialize.py
            {{- if .Values.persistence.staticDir.enabled }}
            - name: static-dir
              mountPath: {{ .Values.persistence.staticDir.mountPath }}
              subPath: {{ .Values.persistence.staticDir.subPath }}
            {{- end }}
            {{- if .Values.persistence.mediaDir.enabled }}
            - name: media-dir
              mountPath: {{ .Values.persistence.mediaDir.mountPath }}
              subPath: {{ .Values.persistence.mediaDir.subPath }}
            {{- end }}

        - name: {{ template "geonode.fullname" . }}-nginx
          image: nginx:1.17.2-alpine
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: nginx-geonode
              containerPort: 80
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: config-volume
              mountPath: /etc/nginx/geonode.conf
              subPath: geonode.conf
            {{- if .Values.persistence.staticDir.enabled }}
            - name: static-dir
              mountPath: {{ .Values.persistence.staticDir.mountPath }}
              subPath: {{ .Values.persistence.staticDir.subPath }}
            {{- end }}
            {{- if .Values.persistence.mediaDir.enabled }}
            - name: media-dir
              mountPath: {{ .Values.persistence.mediaDir.mountPath }}
              subPath: {{ .Values.persistence.mediaDir.subPath }}
            {{- end }}

      volumes:
        - name: config-volume
          configMap:
            name: geonode-config
            defaultMode: 0755
{{- if and .Values.persistence.staticDir.enabled .Values.persistence.staticDir.existingClaim }}
        - name: static-dir
          persistentVolumeClaim:
{{- with .Values.persistence.staticDir.existingClaim }}
            claimName: {{ tpl . $ }}
{{- end }}
{{- else if .Values.persistence.staticDir.enabled }}
        - name: static-dir
          persistentVolumeClaim:
            claimName: static-dir
{{- end }}
{{- if and .Values.persistence.mediaDir.enabled .Values.persistence.mediaDir.existingClaim }}
        - name: media-dir
          persistentVolumeClaim:
{{- with .Values.persistence.mediaDir.existingClaim }}
            claimName: {{ tpl . $ }}
{{- end }}
{{- else if .Values.persistence.mediaDir.enabled }}
        - name: media-dir
          persistentVolumeClaim:
            claimName: media-dir
{{- end }}
